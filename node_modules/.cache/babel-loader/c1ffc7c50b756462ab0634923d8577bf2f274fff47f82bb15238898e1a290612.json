{"ast":null,"code":"var _jsxFileName = \"/Users/bossthemeow/Desktop/nlpproject/src/Containers/Engtothai.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './Engtothai.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EngtoThai = () => {\n  _s();\n  const [language, setLanguage] = useState('en');\n  const words = {\n    en: {\n      hello: 'Hello World',\n      history: 'History',\n      feedback: 'Feedback'\n    },\n    th: {\n      hello: 'สวัสดีชาวโลก',\n      history: 'ประวัติศาสตร์',\n      feedback: 'ข้อเสนอแนะ'\n    }\n  };\n  const handleLanguageChange = event => {\n    setLanguage(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: words[language].hello\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"language-selector\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        value: language,\n        onChange: handleLanguageChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"en\",\n          children: \"English\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"th\",\n          children: \"Thai\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: words[language].history\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: words[language].feedback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(EngtoThai, \"fVUtOCD1O58HgvMjnE8lxRQa0QA=\");\n_c = EngtoThai;\nexport default EngtoThai;\nvar _c;\n$RefreshReg$(_c, \"EngtoThai\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","EngtoThai","_s","language","setLanguage","words","en","hello","history","feedback","th","handleLanguageChange","event","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","_c","$RefreshReg$"],"sources":["/Users/bossthemeow/Desktop/nlpproject/src/Containers/Engtothai.js"],"sourcesContent":["import React from 'react';\nimport './Engtothai.css';\nimport { useState } from 'react';\nconst EngtoThai = () => {\n  const [language, setLanguage] = useState('en');\n\n  const words = {\n    en: {\n      hello: 'Hello World',\n      history: 'History',\n      feedback: 'Feedback',\n    },\n    th: {\n      hello: 'สวัสดีชาวโลก',\n      history: 'ประวัติศาสตร์',\n      feedback: 'ข้อเสนอแนะ',\n    },\n  };\n\n  const handleLanguageChange = (event) => {\n    setLanguage(event.target.value);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>{words[language].hello}</h1>\n      <div className=\"language-selector\">\n        <select value={language} onChange={handleLanguageChange}>\n          <option value=\"en\">English</option>\n          <option value=\"th\">Thai</option>\n        </select>\n      </div>\n      <div className=\"footer\">\n        <span>{words[language].history}</span>\n        <span>{words[language].feedback}</span>\n      </div>\n    </div>\n  );\n}\n\nexport default EngtoThai;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,iBAAiB;AACxB,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACjC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAE9C,MAAMO,KAAK,GAAG;IACZC,EAAE,EAAE;MACFC,KAAK,EAAE,aAAa;MACpBC,OAAO,EAAE,SAAS;MAClBC,QAAQ,EAAE;IACZ,CAAC;IACDC,EAAE,EAAE;MACFH,KAAK,EAAE,cAAc;MACrBC,OAAO,EAAE,eAAe;MACxBC,QAAQ,EAAE;IACZ;EACF,CAAC;EAED,MAAME,oBAAoB,GAAIC,KAAK,IAAK;IACtCR,WAAW,CAACQ,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACjC,CAAC;EAED,oBACEd,OAAA;IAAKe,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBhB,OAAA;MAAAgB,QAAA,EAAKX,KAAK,CAACF,QAAQ,CAAC,CAACI;IAAK;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChCpB,OAAA;MAAKe,SAAS,EAAC,mBAAmB;MAAAC,QAAA,eAChChB,OAAA;QAAQc,KAAK,EAAEX,QAAS;QAACkB,QAAQ,EAAEV,oBAAqB;QAAAK,QAAA,gBACtDhB,OAAA;UAAQc,KAAK,EAAC,IAAI;UAAAE,QAAA,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACnCpB,OAAA;UAAQc,KAAK,EAAC,IAAI;UAAAE,QAAA,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACNpB,OAAA;MAAKe,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBACrBhB,OAAA;QAAAgB,QAAA,EAAOX,KAAK,CAACF,QAAQ,CAAC,CAACK;MAAO;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACtCpB,OAAA;QAAAgB,QAAA,EAAOX,KAAK,CAACF,QAAQ,CAAC,CAACM;MAAQ;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAAlB,EAAA,CAnCKD,SAAS;AAAAqB,EAAA,GAATrB,SAAS;AAqCf,eAAeA,SAAS;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}